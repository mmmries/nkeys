defmodule NKEYS.CRC do
  @moduledoc """
  Calculates a CRC16 checksum (CCITT - XMODEM)

  This is based on the [go nkeys](https://github.com/nats-io/nkeys/blob/ca6c74a24daca36cbe07d7389d7b2619d0fbc177/crc16.go) package implementation
  """
  import Bitwise,
    only: [
      bxor: 2,
      &&&: 2,
      >>>: 2,
      <<<: 2
    ]

  def compute(binary) when is_binary(binary) do
    compute(binary, 0)
  end

  def compute(<<>>, crc), do: crc

  def compute(<<byte, rem::binary>>, crc) do
    key = bxor(crc >>> 8, byte) &&& 0xFF
    crc = bxor(crc <<< 8, Map.get(table(), key))
    compute(rem, crc &&& 0xFFFF)
  end

  def table do
    %{
      0x00 => 0x0000,
      0x01 => 0x1021,
      0x02 => 0x2042,
      0x03 => 0x3063,
      0x04 => 0x4084,
      0x05 => 0x50A5,
      0x06 => 0x60C6,
      0x07 => 0x70E7,
      0x08 => 0x8108,
      0x09 => 0x9129,
      0x0A => 0xA14A,
      0x0B => 0xB16B,
      0x0C => 0xC18C,
      0x0D => 0xD1AD,
      0x0E => 0xE1CE,
      0x0F => 0xF1EF,
      0x10 => 0x1231,
      0x11 => 0x0210,
      0x12 => 0x3273,
      0x13 => 0x2252,
      0x14 => 0x52B5,
      0x15 => 0x4294,
      0x16 => 0x72F7,
      0x17 => 0x62D6,
      0x18 => 0x9339,
      0x19 => 0x8318,
      0x1A => 0xB37B,
      0x1B => 0xA35A,
      0x1C => 0xD3BD,
      0x1D => 0xC39C,
      0x1E => 0xF3FF,
      0x1F => 0xE3DE,
      0x20 => 0x2462,
      0x21 => 0x3443,
      0x22 => 0x0420,
      0x23 => 0x1401,
      0x24 => 0x64E6,
      0x25 => 0x74C7,
      0x26 => 0x44A4,
      0x27 => 0x5485,
      0x28 => 0xA56A,
      0x29 => 0xB54B,
      0x2A => 0x8528,
      0x2B => 0x9509,
      0x2C => 0xE5EE,
      0x2D => 0xF5CF,
      0x2E => 0xC5AC,
      0x2F => 0xD58D,
      0x30 => 0x3653,
      0x31 => 0x2672,
      0x32 => 0x1611,
      0x33 => 0x0630,
      0x34 => 0x76D7,
      0x35 => 0x66F6,
      0x36 => 0x5695,
      0x37 => 0x46B4,
      0x38 => 0xB75B,
      0x39 => 0xA77A,
      0x3A => 0x9719,
      0x3B => 0x8738,
      0x3C => 0xF7DF,
      0x3D => 0xE7FE,
      0x3E => 0xD79D,
      0x3F => 0xC7BC,
      0x40 => 0x48C4,
      0x41 => 0x58E5,
      0x42 => 0x6886,
      0x43 => 0x78A7,
      0x44 => 0x0840,
      0x45 => 0x1861,
      0x46 => 0x2802,
      0x47 => 0x3823,
      0x48 => 0xC9CC,
      0x49 => 0xD9ED,
      0x4A => 0xE98E,
      0x4B => 0xF9AF,
      0x4C => 0x8948,
      0x4D => 0x9969,
      0x4E => 0xA90A,
      0x4F => 0xB92B,
      0x50 => 0x5AF5,
      0x51 => 0x4AD4,
      0x52 => 0x7AB7,
      0x53 => 0x6A96,
      0x54 => 0x1A71,
      0x55 => 0x0A50,
      0x56 => 0x3A33,
      0x57 => 0x2A12,
      0x58 => 0xDBFD,
      0x59 => 0xCBDC,
      0x5A => 0xFBBF,
      0x5B => 0xEB9E,
      0x5C => 0x9B79,
      0x5D => 0x8B58,
      0x5E => 0xBB3B,
      0x5F => 0xAB1A,
      0x60 => 0x6CA6,
      0x61 => 0x7C87,
      0x62 => 0x4CE4,
      0x63 => 0x5CC5,
      0x64 => 0x2C22,
      0x65 => 0x3C03,
      0x66 => 0x0C60,
      0x67 => 0x1C41,
      0x68 => 0xEDAE,
      0x69 => 0xFD8F,
      0x6A => 0xCDEC,
      0x6B => 0xDDCD,
      0x6C => 0xAD2A,
      0x6D => 0xBD0B,
      0x6E => 0x8D68,
      0x6F => 0x9D49,
      0x70 => 0x7E97,
      0x71 => 0x6EB6,
      0x72 => 0x5ED5,
      0x73 => 0x4EF4,
      0x74 => 0x3E13,
      0x75 => 0x2E32,
      0x76 => 0x1E51,
      0x77 => 0x0E70,
      0x78 => 0xFF9F,
      0x79 => 0xEFBE,
      0x7A => 0xDFDD,
      0x7B => 0xCFFC,
      0x7C => 0xBF1B,
      0x7D => 0xAF3A,
      0x7E => 0x9F59,
      0x7F => 0x8F78,
      0x80 => 0x9188,
      0x81 => 0x81A9,
      0x82 => 0xB1CA,
      0x83 => 0xA1EB,
      0x84 => 0xD10C,
      0x85 => 0xC12D,
      0x86 => 0xF14E,
      0x87 => 0xE16F,
      0x88 => 0x1080,
      0x89 => 0x00A1,
      0x8A => 0x30C2,
      0x8B => 0x20E3,
      0x8C => 0x5004,
      0x8D => 0x4025,
      0x8E => 0x7046,
      0x8F => 0x6067,
      0x90 => 0x83B9,
      0x91 => 0x9398,
      0x92 => 0xA3FB,
      0x93 => 0xB3DA,
      0x94 => 0xC33D,
      0x95 => 0xD31C,
      0x96 => 0xE37F,
      0x97 => 0xF35E,
      0x98 => 0x02B1,
      0x99 => 0x1290,
      0x9A => 0x22F3,
      0x9B => 0x32D2,
      0x9C => 0x4235,
      0x9D => 0x5214,
      0x9E => 0x6277,
      0x9F => 0x7256,
      0xA0 => 0xB5EA,
      0xA1 => 0xA5CB,
      0xA2 => 0x95A8,
      0xA3 => 0x8589,
      0xA4 => 0xF56E,
      0xA5 => 0xE54F,
      0xA6 => 0xD52C,
      0xA7 => 0xC50D,
      0xA8 => 0x34E2,
      0xA9 => 0x24C3,
      0xAA => 0x14A0,
      0xAB => 0x0481,
      0xAC => 0x7466,
      0xAD => 0x6447,
      0xAE => 0x5424,
      0xAF => 0x4405,
      0xB0 => 0xA7DB,
      0xB1 => 0xB7FA,
      0xB2 => 0x8799,
      0xB3 => 0x97B8,
      0xB4 => 0xE75F,
      0xB5 => 0xF77E,
      0xB6 => 0xC71D,
      0xB7 => 0xD73C,
      0xB8 => 0x26D3,
      0xB9 => 0x36F2,
      0xBA => 0x0691,
      0xBB => 0x16B0,
      0xBC => 0x6657,
      0xBD => 0x7676,
      0xBE => 0x4615,
      0xBF => 0x5634,
      0xC0 => 0xD94C,
      0xC1 => 0xC96D,
      0xC2 => 0xF90E,
      0xC3 => 0xE92F,
      0xC4 => 0x99C8,
      0xC5 => 0x89E9,
      0xC6 => 0xB98A,
      0xC7 => 0xA9AB,
      0xC8 => 0x5844,
      0xC9 => 0x4865,
      0xCA => 0x7806,
      0xCB => 0x6827,
      0xCC => 0x18C0,
      0xCD => 0x08E1,
      0xCE => 0x3882,
      0xCF => 0x28A3,
      0xD0 => 0xCB7D,
      0xD1 => 0xDB5C,
      0xD2 => 0xEB3F,
      0xD3 => 0xFB1E,
      0xD4 => 0x8BF9,
      0xD5 => 0x9BD8,
      0xD6 => 0xABBB,
      0xD7 => 0xBB9A,
      0xD8 => 0x4A75,
      0xD9 => 0x5A54,
      0xDA => 0x6A37,
      0xDB => 0x7A16,
      0xDC => 0x0AF1,
      0xDD => 0x1AD0,
      0xDE => 0x2AB3,
      0xDF => 0x3A92,
      0xE0 => 0xFD2E,
      0xE1 => 0xED0F,
      0xE2 => 0xDD6C,
      0xE3 => 0xCD4D,
      0xE4 => 0xBDAA,
      0xE5 => 0xAD8B,
      0xE6 => 0x9DE8,
      0xE7 => 0x8DC9,
      0xE8 => 0x7C26,
      0xE9 => 0x6C07,
      0xEA => 0x5C64,
      0xEB => 0x4C45,
      0xEC => 0x3CA2,
      0xED => 0x2C83,
      0xEE => 0x1CE0,
      0xEF => 0x0CC1,
      0xF0 => 0xEF1F,
      0xF1 => 0xFF3E,
      0xF2 => 0xCF5D,
      0xF3 => 0xDF7C,
      0xF4 => 0xAF9B,
      0xF5 => 0xBFBA,
      0xF6 => 0x8FD9,
      0xF7 => 0x9FF8,
      0xF8 => 0x6E17,
      0xF9 => 0x7E36,
      0xFA => 0x4E55,
      0xFB => 0x5E74,
      0xFC => 0x2E93,
      0xFD => 0x3EB2,
      0xFE => 0x0ED1,
      0xFF => 0x1EF0
    }
  end
end
